@model Car.Users

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta charset="utf-8" />
<meta name="viewport" content="width = 1200">
<div class="empty-box"></div>

<div class="context-box">
    <div class="container clearfix">
        <div class="left-column">
            <h2><a href="about.html">Забыли пароль?</a></h2>
            <a href="#" class="baner"><img src="@Url.Content("~/Content/")upload/baner.jpg" height="400" width="240" alt=""></a>
            <a href="#" class="baner"><img src="@Url.Content("~/Content/")upload/baner2.jpg" height="400" width="240" alt=""></a>
        </div>
        <div class="right-column">
            <div class="login">

                <div class="form-horizontal">
                    @using (Html.BeginForm("PasswordConfirm", "User", FormMethod.Post))
                    {
                        //this is for create form tag
                        @Html.AntiForgeryToken()     //this is for prevent CSRF attack
                        @Html.ValidationSummary(true)

                        @*if (@ViewBag.Message != null)
                        {
                            <div style="border:1px solid red">
                                @ViewBag.Message
                            </div>
                        }*@

                        @*<div style="border:1px solid red">
                            Забыли пароль?
                            <br> введите свой Email.
                        </div>*@
                        <div class="form-group">
                            @Html.LabelFor(a => a.Email, "Email", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(a => a.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(a => a.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(a => a.Password, "Пароль", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(a => a.Password, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(a => a.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(a => a.ConfirmPassword, "Подтвердите пароль", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(a => a.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(a => a.ConfirmPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Отправить" class="btn btn-default" />
                            </div>
                        </div>
                    }
                </div>

            







            </div>

        </div>
    </div>
</div>

@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
}
